default:
  tags:
    - Fulen    

stages:          # List of stages for jobs, and their order of execution
  - get_secrets
  - build_dev_images
  #- deploy_dev
  #- cleanup_dev_deployment
  #- cleanup_dev_images

get_secrets:
  stage: get_secrets
  script:
    - echo "Getting secrets from HC Vault instance"
    # - apk add -q curl jq vault
    - apt update && apt -y upgrade
    - apt-get install -y curl gnupg lsb-release software-properties-common
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    - apt update
    - apt install -y vault    
    - apt-get install --reinstall -y vault
    
    - export VAULT_ADDR="https://vault.svc.cscs.ch"
    - export VAULT_TOKEN=$CI_VAULT_TOKEN
    - CI_K8S_TOKEN="$(vault kv get -field=firecrest-cicd-secret  firecrest/dev)"   
    - CI_REGISTRY_PASSWORD="$(vault kv get -field=JFROG_API_KEY firecrest/dev)"
    - CI_REGISTRY="$(vault kv get -field=REGISTRY firecrest/dev)"
    - CI_REGISTRY_GROUP="$(vault kv get -field=REGISTRY_GROUP firecrest/dev)"
    - CI_REGISTRY_USER="$(vault kv get -field=REGISTRY_USER firecrest/dev)"
    - CI_REGISTRY_PREFIX="$(vault kv get -field=REPO_PREFIX firecrest/dev)" 

    - echo "CI_K8S_TOKEN=$CI_K8S_TOKEN" >> build.env
    - echo "CI_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD" >> build.env    
  artifacts:
    reports:
      dotenv: build.env

build_dev_images:
  stage: build_dev_images
  needs:
    - job: get_secrets
      artifacts: true
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo '{"auths":{"'$CI_REGISTRY'":{"username":"'$CI_REGISTRY_USER'","password":"'$CI_REGISTRY_PASSWORD'"}}}' > /kaniko/.docker/config.json
    - cat /kaniko/.docker/config.json
    - >
        if [ "$CI_COMMIT_TAG" != "" ]; then 
          images="compute reservations status storage tasks utilities"; 
          - for image in $images; do         
            /kaniko/executor
              --context ./
              --dockerfile "deploy/docker/$image/Dockerfile"
              --destination "${CI_REGISTRY_PREFIX}/$image:${CI_COMMIT_SHORT_SHA}"
              --cleanup;
            done
        else 
          # build microservices
          # Certificator separated since its base image is different (centos:7)
          /kaniko/executor --context ./ --dockerfile "deploy/docker/certificator/Dockerfile" 
              --destination "${CI_REGISTRY_PREFIX}/certificator:${CI_COMMIT_SHORT_SHA}" --cleanup

          # Rest of the microservices
          for ms in compute reservations status storage tasks utilities; do
              /kaniko/executor --build-arg BASE_IMAGE=${CI_REGISTRY_PREFIX}/f7t-base:latest --registry-mirror $REGISTRY \
              --context ./ --dockerfile deploy/docker/$ms/Dockerfile --destination ${CI_REGISTRY_PREFIX}/$ms:$GIT_COMMIT_SHORT_SHA --cleanup
          done

          # build web client
          /kaniko/executor --context src/tests/template_client --dockerfile ./Dockerfile \
          --destination ${CI_REGISTRY_PREFIX}/client:$GIT_COMMIT_SHORT --cleanup

          # build tester
          /kaniko/executor --context ./ --dockerfile deploy/docker/tester/Dockerfile \
          --destination ${CI_REGISTRY_PREFIX}/tester:$GIT_COMMIT_SHORT --cleanup          
        fi

